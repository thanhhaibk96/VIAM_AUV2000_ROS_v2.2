<?xml version="1.0"?>
<launch>
  <param name="use_sim_time" value="true" />
  <param name="world_lat" value="10.763915776641571" />
  <param name="world_lon" value="106.65688877139627" />


  <arg name="use_ned_frame" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="set_timeout" default="false"/>
  <arg name="timeout" default="0.0"/>
<!--
  <node pkg="gazebo_ros" type="gzserver"
        name="gazebo" output="screen"
        args="-e ode $(find auv2000_gazebo_simulation)/world/open_sea.world" />
  <node pkg="gazebo_ros" type="gzclient"
        name="gazebo_gui" />
-->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="worlds/auv_underwater_world.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
      <arg name="verbose" value="true"/>
  </include>

  <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

  <node name="publish_world_models"
      pkg="uuv_assistants"
      type="publish_world_models.py"
      output="screen">
      <rosparam subst_value="true">
        meshes:
            sea_surface:
                mesh: package://uuv_gazebo_worlds/Media/models/sea_surface_1000m_x_1000m.dae
                model: sea_surface
                scale: [2, 2, 1]
            sea_bottom:
                plane: [2000, 2000, 0.1]
                pose:
                    position: [0, 0, -80]
      </rosparam>
  </node>
  <group ns="auv">
    <param name="ned_lat" value="10.763915776641571" />
    <param name="ned_lon" value="106.65688877139627" />

    <include file="$(find auv2000_gazebo_simulation)/launch/upload_auv.launch">
      <arg name="init_x" default="0" />
      <arg name="init_y" default="0" />
      <arg name="init_Y" default="0" />
      <arg name="model_name" default="auv" />
    </include>
  </group>
</launch>
