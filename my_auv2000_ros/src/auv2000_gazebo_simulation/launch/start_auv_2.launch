<?xml version="1.0"?>
<launch> 
 <arg name="uuv_name" default="auv"/>
  <!-- Vehicle's initial pose -->
  <arg name="x"     default="0"/>
  <arg name="y"     default="0"/>
  <arg name="z"     default="40"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="0"/>

  <arg name="gui_on" default="true"/>

  <arg name="record" default="false"/>
  <arg name="bag_filename" default="recording.bag"/>

  <arg name="use_ned_frame" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="set_timeout" default="false"/>
  <arg name="timeout" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="worlds/auv_underwater_world.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
      <arg name="verbose" value="true"/>

  </include>



  <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>
  <node name="publish_world_models"
      pkg="uuv_assistants"
      type="publish_world_models.py"
      output="screen">
      <rosparam subst_value="true">
        meshes:
            sea_surface:
                mesh: package://uuv_gazebo_worlds/Media/models/sea_surface_1000m_x_1000m.dae
                model: sea_surface
                scale: [2, 2, 1]
            sea_bottom:
                plane: [2000, 2000, 0.1]
                pose:
                    position: [0, 0, -80]
      </rosparam>
  </node>

  <group if="$(arg set_timeout)">
      <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
          <arg name="timeout" value="$(arg timeout)"/>
      </include>
  </group>
<group ns="auv">
    <param name="ned_lat" value="10.763915776641571" />
    <param name="ned_lon" value="106.65688877139627" />


  <include file="$(find auv2000_gazebo_simulation)/launch/upload_auv.launch">
    <arg name="model_name" value="auv"/>
    <arg name="init_x" value="$(arg x)"/>
    <arg name="init_y" value="$(arg y)"/>
    <arg name="init_z" value="$(arg z)"/>
    <arg name="init_Y" value="$(arg yaw)"/>
  </include>



   <rosparam command="load" file="$(find auv2000_description)/config/joints.yaml"/>

        <node name="controller_spawner" pkg="controller_manager" type="spawner"
              respawn="false" output="screen" ns="/auv"
              args="--namespace=/auv
              joint_state_controller
              joint1_position_controller
              --timeout 60">
        </node>
   
 </group>

  

</launch>
